<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.utahmsd</groupId>
    <artifactId>pupper</artifactId>
    <version>0.1.5.2-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>pupper</name>
    <description>Server application for Pupper mobile app</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.4.RELEASE</version>
        <relativePath/>
    </parent>

    <properties>
        <mainClass>com.utahmsd.pupper.PupperApplication</mainClass>
        <rest-assured>3.0.6</rest-assured>
        <assertj>3.8.0</assertj>
        <spring>5.0.8.RELEASE</spring>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <springfox>2.9.2</springfox>
        <vavr>0.9.2</vavr>
        <jackson>2.9.8</jackson>
        <joda-time>2.10</joda-time>
        <aws-java-sdk>1.11.424</aws-java-sdk>

        <!--Swagger2Markup/AsciiDoc Properties-->
        <swagger2markup.version>1.2.0</swagger2markup.version>
        <swagger.output.dir>${project.build.directory}/swagger</swagger.output.dir>
        <swagger.snippetOutput.dir>${project.build.directory}/asciidoc/snippets</swagger.snippetOutput.dir>
        <generated.asciidoc.directory>${project.build.directory}/asciidoc</generated.asciidoc.directory>
        <swagger.input>${project.basedir}/src/docs/swagger/swagger.json</swagger.input>
        <asciidoctor.input.directory>${project.basedir}/src/docs/asciidoc</asciidoctor.input.directory>
        <asciidoctor.html.output.directory>${project.build.directory}/asciidoc/html</asciidoctor.html.output.directory>
        <asciidoctor.pdf.output.directory>${project.build.directory}/asciidoc/pdf</asciidoctor.pdf.output.directory>
        <!---->

    </properties>
    <dependencies>
        <dependency>
            <groupId>com.auth0</groupId>
            <artifactId>java-jwt</artifactId>
            <version>3.4.1</version>
        </dependency>
        <dependency>
            <groupId>com.auth0</groupId>
            <artifactId>auth0</artifactId>
            <version>1.9.1</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
            <version>2.1.0.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk</artifactId>
            <version>${aws-java-sdk}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-crypto</artifactId>
            <version>5.1.0.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>1</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson}</version>
        </dependency>
        <dependency>
            <groupId>io.vavr</groupId>
            <artifactId>vavr</artifactId>
            <version>${vavr}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.5</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${springfox}</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${springfox}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jersey</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring}</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${joda-time}</version>
        </dependency>
        <dependency>
            <groupId>org.imgscalr</groupId>
            <artifactId>imgscalr-lib</artifactId>
            <version>4.2</version>
        </dependency>

        <!--TESTING DEPENDENCIES-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.4.197</version>
            <!--<scope>test</scope>-->
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <scope>test</scope>
            <version>2.23.4</version>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
        <!--END OF TESTING DEPENDENCIES-->


        <!--SWAGGER2MARKUP/ASCIIDOC DOCUMENTATION DEPENDENCIES-->
        <dependency>
            <groupId>org.springframework.restdocs</groupId>
            <artifactId>spring-restdocs-mockmvc</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.github.swagger2markup</groupId>
            <artifactId>swagger2markup</artifactId>
            <version>1.3.3</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-staticdocs</artifactId>
            <version>2.6.1</version>
        </dependency>
        <dependency>
            <groupId>io.github.swagger2markup</groupId>
            <artifactId>swagger2markup-spring-restdocs-ext</artifactId>
            <version>${swagger2markup.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!--Elastic Beanstalk Configuration-->
            <plugin>
                <groupId>br.com.ingenieux</groupId>
                <artifactId>beanstalk-maven-plugin</artifactId>
                <version>1.5.0</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <systemPropertyVariables>
                        <io.springfox.staticdocs.outputDir>${swagger.output.dir}</io.springfox.staticdocs.outputDir>
                        <io.springfox.staticdocs.snippetsOutputDir>${swagger.snippetOutput.dir}</io.springfox.staticdocs.snippetsOutputDir>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

            <!--Swagger2Markup/AsciiDoc Plugins/Configuration-->

            <!--START of comment out when not running tests for generating documentation-->

            <!--<plugin>-->
            <!--<groupId>io.github.swagger2markup</groupId>-->
            <!--<artifactId>swagger2markup-maven-plugin</artifactId>-->
            <!--<version>1.3.3</version>-->
            <!--<dependencies>-->
            <!--<dependency>-->
            <!--<groupId>io.github.swagger2markup</groupId>-->
            <!--<artifactId>swagger2markup-import-files-ext</artifactId>-->
            <!--<version>1.3.1</version>-->
            <!--</dependency>-->
            <!--<dependency>-->
            <!--<groupId>io.github.swagger2markup</groupId>-->
            <!--<artifactId>swagger2markup</artifactId>-->
            <!--<version>1.3.1</version>-->
            <!--</dependency>-->
            <!--</dependencies>-->
            <!--<configuration>-->
            <!--<swaggerInput>${swagger.input}</swaggerInput>-->
            <!--<outputDir>${generated.asciidoc.directory}</outputDir>-->
            <!--<config>-->
            <!--<swagger2markup.markupLanguage>ASCIIDOC</swagger2markup.markupLanguage>-->
            <!--<swagger2markup.pathsGroupedBy>TAGS</swagger2markup.pathsGroupedBy>-->
            <!--<swagger2markup.extensions.dynamicOverview.contentPath>${project.basedir}/src/docs/asciidoc/extensions/overview</swagger2markup.extensions.dynamicOverview.contentPath>-->
            <!--<swagger2markup.extensions.dynamicDefinitions.contentPath>${project.basedir}/src/docs/asciidoc/extensions/definitions</swagger2markup.extensions.dynamicDefinitions.contentPath>-->
            <!--<swagger2markup.extensions.dynamicPaths.contentPath>${project.basedir}/src/docs/asciidoc/extensions/paths</swagger2markup.extensions.dynamicPaths.contentPath>-->
            <!--<swagger2markup.extensions.dynamicSecurity.contentPath>${project.basedir}src/docs/asciidoc/extensions/security</swagger2markup.extensions.dynamicSecurity.contentPath>-->
            <!--</config>-->
            <!--</configuration>-->
            <!--<executions>-->
            <!--<execution>-->
            <!--<phase>generate-sources</phase>-->
            <!--<goals>-->
            <!--<goal>convertSwagger2markup</goal>-->
            <!--</goals>-->
            <!--</execution>-->
            <!--</executions>-->
            <!--</plugin>-->

            <!--<plugin>-->
            <!--<groupId>org.asciidoctor</groupId>-->
            <!--<artifactId>asciidoctor-maven-plugin</artifactId>-->
            <!--<version>1.5.7.1</version>-->

            <!--&lt;!&ndash; Include Asciidoctor PDF for pdf generation &ndash;&gt;-->
            <!--<dependencies>-->
            <!--<dependency>-->
            <!--<groupId>org.asciidoctor</groupId>-->
            <!--<artifactId>asciidoctorj-pdf</artifactId>-->
            <!--<version>1.5.0-alpha.16</version>-->
            <!--</dependency>-->
            <!--</dependencies>-->
            <!--&lt;!&ndash; Configure generic document generation settings &ndash;&gt;-->
            <!--<configuration>-->
            <!--<sourceDirectory>${asciidoctor.input.directory}</sourceDirectory>-->
            <!--<sourceDocumentName>index.adoc</sourceDocumentName>-->
            <!--<attributes>-->
            <!--<doctype>book</doctype>-->
            <!--<toc>left</toc>-->
            <!--<toclevels>3</toclevels>-->
            <!--<numbered/>-->
            <!--<hardbreaks/>-->
            <!--<sectlinks/>-->
            <!--<sectanchors/>-->
            <!--<generated>${generated.asciidoc.directory}</generated>-->
            <!--</attributes>-->
            <!--</configuration>-->
            <!--&lt;!&ndash; Since each execution can only handle one backend, run-->
            <!--separate executions for each desired output type &ndash;&gt;-->
            <!--<executions>-->
            <!--<execution>-->
            <!--<id>output-html</id>-->
            <!--<phase>test</phase>-->
            <!--<goals>-->
            <!--<goal>process-asciidoc</goal>-->
            <!--</goals>-->
            <!--<configuration>-->
            <!--<backend>html5</backend>-->
            <!--<outputDirectory>${asciidoctor.html.output.directory}</outputDirectory>-->
            <!--</configuration>-->
            <!--</execution>-->

            <!--<execution>-->
            <!--<id>output-pdf</id>-->
            <!--<phase>test</phase>-->
            <!--<goals>-->
            <!--<goal>process-asciidoc</goal>-->
            <!--</goals>-->
            <!--<configuration>-->
            <!--<backend>pdf</backend>-->
            <!--<outputDirectory>${asciidoctor.pdf.output.directory}</outputDirectory>-->
            <!--</configuration>-->
            <!--</execution>-->
            <!--</executions>-->
            <!--</plugin>-->

            <!--END of comment out when not running tests for generating documentation-->


            <!-- specify the main class for the manifest -->
            <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <version>3.1.0</version>
            <configuration>
            <archive>
            <manifest>
            <addClasspath>true</addClasspath>
            <classpathPrefix>lib/</classpathPrefix>
            <mainClass>com.utahmsd.pupper.PupperApplication</mainClass>
            </manifest>
            </archive>
            </configuration>
            </plugin>

            <!-- copy dependencies to the lib directory -->
            <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
            <execution>
            <phase>package</phase>
            <goals>
            <goal>copy-dependencies</goal>
            </goals>
            <configuration>
            <outputDirectory>${project.build.directory}/lib</outputDirectory>
            </configuration>
            </execution>
            </executions>
            </plugin>
        </plugins>
    </build>

    <pluginRepositories>
        <pluginRepository>
            <id>jcenter-snapshots</id>
            <name>jcenter</name>
            <url>http://oss.jfrog.org/artifactory/oss-snapshot-local/</url>
        </pluginRepository>
        <pluginRepository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>jcenter-releases</id>
            <name>jcenter</name>
            <url>http://jcenter.bintray.com</url>
        </pluginRepository>
    </pluginRepositories>

    <repositories>
        <repository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>jcenter-releases</id>
            <name>jcenter</name>
            <url>http://jcenter.bintray.com</url>
        </repository>
    </repositories>

</project>
